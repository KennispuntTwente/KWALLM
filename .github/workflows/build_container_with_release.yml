name: Build container with release (preview ➜ publish)

on:
  repository_dispatch:
    types: [trigger-container-build]
  workflow_dispatch:
  release:
    types: [published]

env:
  IMAGE_NAME: ghcr.io/kennispunttwente/tekstanalyse_met_llm

permissions:
  contents: read
  packages: write

jobs:
  # ──────────────────────────────────────────────────────
  # 1. Build & push only the :preview tag and capture its digest
  # ──────────────────────────────────────────────────────
  build:
    if: github.event_name != 'release'
    runs-on: ubuntu-latest
    outputs:
      preview_digest: ${{ steps.inspect.outputs.digest }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build & push preview
        id: build
        run: |
          docker buildx build \
            --push \
            --tag ${{ env.IMAGE_NAME }}:preview \
            .

      - name: Inspect preview digest
        id: inspect
        run: |
          DIGEST=$(docker buildx imagetools inspect --raw \
            ${{ env.IMAGE_NAME }}:preview \
            | jq -r '.manifests[0].digest')
          echo "::set-output name=digest::$DIGEST"

  # ──────────────────────────────────────────────────────
  # 2. On release publish: promote the exact preview digest
  # ──────────────────────────────────────────────────────
  publish:
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Promote preview digest → version / latest / stable
        run: |
          docker buildx imagetools create \
            --tag ${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }} \
            --tag ${{ env.IMAGE_NAME }}:latest \
            --tag ${{ env.IMAGE_NAME }}:stable \
            ${{ env.IMAGE_NAME }}@${{ needs.build.outputs.preview_digest }}

  # ──────────────────────────────────────────────────────
  # 3. Prune any *untagged* digests after build
  # ──────────────────────────────────────────────────────
  prune:
    needs: build
    if: github.event_name != 'release'
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - name: Delete only untagged digests
        uses: actions/delete-package-versions@v5
        with:
          package-name: tekstanalyse_met_llm
          package-type: container
          # we don’t need to “keep" any unprotected versions; they’re all untagged
          min-versions-to-keep: 0
          # protect every tagged version
          delete-only-untagged-versions: true
          token: ${{ secrets.GHCR_PAT }}
